<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.task.dao.mapper.TaskMapper">
  <resultMap id="BaseResultMap" type="com.task.entity.Task">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="creator_id" jdbcType="VARCHAR" property="creatorId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
    <result column="receive_time" jdbcType="TIMESTAMP" property="receiveTime" />
    <result column="creator_name" jdbcType="VARCHAR" property="creatorName" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="image_data" jdbcType="LONGVARCHAR" property="imageData"/>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from task
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.task.entity.Task" useGeneratedKeys="true" keyProperty="id">
    <selectKey keyProperty="id" resultType="string" order="BEFORE">
      select replace(UUID(), '-', '')
    </selectKey>
    insert into task (id, `name`, description, 
      `status`, creator_id,
      create_time, update_time, content,image_data,receive_time
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{creatorId,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR},
      #{imageData,jdbcType=LONGVARCHAR},#{receiveTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.task.entity.Task">
    update task
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="creatorId != null">
        creator_id = #{creatorId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="receiveTime != null">
        receive_time = #{receiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="imageData !=null">
        image_data = #{imageData,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select t.id, t.`name`, t.description, t.`status`, u.username AS creator_name, t.creator_id,t.create_time, t.update_time,
    t.content,t.receive_time,t.image_data
    from task t
    LEFT JOIN user u ON t.creator_id = u.id
    where t.id = #{id,jdbcType=VARCHAR}
  </select>

  <select id="selectAll" resultMap="BaseResultMap">
    select t.id, t.`name`, t.description, t.`status`, us.username AS creator_name,t.creator_id, t.create_time, t.update_time,
    t.content
    from task t
    LEFT JOIN user us ON us.id = t.creator_id
  </select>


  <!--查看7天内任务-->
  <select id="selectPending" resultMap="BaseResultMap">
     select t.id, t.`name`, t.description, t.`status`, u.username AS creator_name,t.creator_id, t.create_time, t.update_time,
    t.content,t.receive_time
    from task t
    LEFT JOIN user u ON t.creator_id = u.id
    where DATE_SUB(now(), INTERVAL 7 DAY) &lt;= date(t.create_time) AND
    t.status IN (0,1)
  </select>


  <!--查看用户下任务-->
  <select id="selectByUserId" parameterType="java.lang.String" resultMap="BaseResultMap">
     select t.id, t.`name`, t.description, tup.`status`, us.username AS creator_name, u.username AS user_name,t.creator_id, tup.user_id, t.create_time, t.update_time,
    t.content,tup.receive_time
    from task t
    RIGHT JOIN task_user_permission tup ON tup.task_id = t.id
    LEFT JOIN user u ON u.id = tup.user_id
    LEFT JOIN user us ON us.id = t.creator_id
    WHERE tup.user_id = #{userId,jdbcType=VARCHAR}
  </select>

</mapper>